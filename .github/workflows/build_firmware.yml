name: Application CI

on:
  push:
    branches: [develop]
  pull_request:
    branches: [develop]
  repository_dispatch:
    types: [frontend-build-completed]

jobs:
  setup:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        soc: [esp8266, esp32, esp32c3]
        release: [0, 1]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          ref: develop

      - name: pull docker image
        run: |
          docker pull docker.io/pjakobs/sming:latest
          
      - name: Get Latest Successful Workflow Run
        id: get_run
        run: |
          latest_run_id=$(curl -s -H "Authorization: token ${{ secrets.artifact_download_token }}" \
            "https://api.github.com/repos/pljakobs/esp_rgb_webapp2/actions/runs?status=success&branch=devel" | \
            jq -r '.workflow_runs[0].id')
          echo "latest_run_id=$latest_run_id" >> $GITHUB_ENV

      - name: Download fileList.h artifact
        run: |
          if [ -f ./include/fileList.h ]; then
            rm ./include/fileList.h
          fi
          artifact_url=$(curl -s -H "Authorization: token ${{ secrets.artifact_download_token }}" \
            "https://api.github.com/repos/pljakobs/esp_rgb_webapp2/actions/runs/${{ env.latest_run_id }}/artifacts" | \
            jq -r '.artifacts[] | select(.name=="fileList.h") | .archive_download_url')
          curl -L -o fileList.h.zip -H "Authorization: token ${{ secrets.artifact_download_token }}" "$artifact_url"
          unzip fileList.h.zip -d ./include

      - name: Download webapp files artifact
        run: |
          if [ -d ./webapp ]; then
            rm -rf ./webapp
            mkdir .webapp
          fi
          artifact_url=$(curl -s -H "Authorization: token ${{ secrets.artifact_download_token }}" \
            "https://api.github.com/repos/pljakobs/esp_rgb_webapp2/actions/runs/${{ env.latest_run_id }}/artifacts" | \
            jq -r '.artifacts[] | select(.name=="spa-files") | .archive_download_url')
          curl -L -o spa-files.zip -H "Authorization: token ${{ secrets.artifact_download_token }}" "$artifact_url"
          unzip spa-files.zip -d ./webapp
      
      - name: Run Build in Docker Container
        run: |
          docker run --rm -v ${{ github.workspace }}:/workspace -w /workspace \
            -e SMING_SOC=${{ matrix.soc }} -e SMING_RELEASE=${{ matrix.release }} \
            docker.io/pjakobs/sming:latest \
            bash -c "source /opt/sming/Tools/export.sh && make SMING_SOC=$SMING_SOC SMING_RELEASE=$SMING_RELEASE"